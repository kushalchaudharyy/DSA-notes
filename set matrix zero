 Brute force solution
 class Solution {
    private:
    void markRow(vector<vector<int>> &matrix, int row){
	for(int i = 0 ; i < matrix[0].size() ;i++){
		if(matrix[row][i] != 0){
			matrix[row][i] = -555;
		}
	}
}
void markCol(vector<vector<int>> &matrix, int col){
	for(int i = 0 ; i < matrix.size() ;i++){
		if(matrix[i][col] != 0){
			matrix[i][col] = -555;
		}
	}
}
public:
    void setZeroes(vector<vector<int>>& matrix) {
    int row = matrix.size();
	int col = matrix[0].size();
	for(int i = 0; i < row; i++){
		for(int j = 0 ; j < col; j++){
			if(matrix[i][j] == 0){
			markRow(matrix, i);
			markCol(matrix, j);
			}
		}
	}
	for(int i = 0; i < row; i++){
		for(int j = 0 ; j < col; j++){
			if(matrix[i][j] == -555){
				matrix[i][j] = 0;
			}
		}
	}
	return;
    }
};


Time complexity = O(n*m)(n+m)(n*m)
s c = O(1)



Better solution 
#include <bits/stdc++.h> 
vector<vector<int>> zeroMatrix(vector<vector<int>> &matrix, int n, int m) {
	// Write your code here.
		int col[m] = {0};
		 int row[n] =  {0};
         for(int i = 0 ; i < n ; i++){
			for(int j = 0; j < m ; j++){
				if(matrix[i][j] == 0){
					row[i] = 1;
					col[j] = 1;
				}
			}
		}
		for(int i = 0 ; i < n; i++){
			for(int j = 0 ; j < m; j++){
				if(row[i] || col[j] ){
					matrix[i][j] = 0;
				}
			}
		}
		return matrix;
}

TC = O(2*m*n)
SC = O(m+n)

optimal solution

#include <bits/stdc++.h>

void setZeros(vector<vector<int>> &matrix)
{
	// Write your code here.
	int n = matrix.size();// row matrix = matrix[][0]
	int m = matrix[0].size();// col matrix = matrix[0][]
	int col0 = 1;
	for(int i = 0 ; i <n ; i++){
		for(int j = 0 ; j < m ; j++){
			if(matrix[i][j]== 0){
				matrix[i][0] = 0;
                                if (j != 0) {
                                  matrix[0][j] = 0;
                                } else {
                                  col0 = 0;
                                }
                        }
		}
	}
	for(int i = 1 ; i < n ; i++){
		for(int j = 1; j < m ; j++){
			if(matrix[i][j] != 0){
                          if (matrix[i][0] == 0 || matrix[0][j] == 0) {
                            matrix[i][j] = 0;
                          }
                        }
                }
        }
	if(matrix[0][0] == 0){
          for (int j = 0; j < m; j++) {
            matrix[0][j] = 0;
          }
        }
		if(col0 == 0){
                for(int i = 0 ; i < n ; i++){
			matrix[i][0] = 0;
		}
	}
      
}

TC = O(2*m*n)
SC = O(1)
